二叉查找树的delete()方法实现

public void deleteMin()
{
	root=deleteMin(root);


}

private Node deleteMin(Node x)
{
	if(x.left == null) return x.right;
	x.left = deleteMin(x.left);
	x.N=size(x.left)+size(x.right)+1;
	return x;

}

public void delete(Key key)
{
	root = delete(Node x,Key key);

}

private Node delete(Node x,Key key)
{
	if(x==null) return null;
	int cmp = key.compareTo(x.key);
	if(cmp<0) return x.left=delete(x.left,key);
	else if(cmp>0) return x.right = delete(x.right,key);
	else
	{
	if(x.left == null) return x.right;
	if(x.right == null) return x.left;
	Node t =x;
	x = min(x.right)
	x.right = deleteMin(x.right);
	x.left=t.left;
	}
	x.N= size(x.left)+size(x.right)+1;
	return x;
}
}